{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "description": "Configuration for bicep publish",
    "properties": {
        "bicepVersion": {
            "type": "string",
            "pattern": "\\d+\\.\\d+\\.\\d+",
            "default": "0.17.0",
            "description": "The required version of bicep. written as version (example: 1.0.1)"
        },
        "registry": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "name of container registy. url not needed",
                    "type": "string"
                },
                "subscriptionId": {
                    "description": "Subscription ID",
                    "type": "string"
                },
                "tenantId": {
                    "default":"mytenant.com",
                    "description": "Tenant ID of tenant domain",
                    "type": "string"
                }
            },
            "required": [
                "tenantId",
                "subscriptionId",
                "name"
            ]
        },
        "module": {
            "description": "module configuration",
            "type": "object",
            "properties": {
                "temp":{
                    "type":"string",
                    "description": "where to store temporary files. default is 'bicepTemp'. path is relative to config file"
                },
                "folder": {
                    "description": "Location of modules in relation to config file",
                    "type": "string"
                },
                "organisationStyle": {
                    "description": "how modules are organised",
                    "type": "object",
                    "properties": {
                        "type": {
                            "description": "the style of your module repository. SingleModuleFolder for a single module per folder (./mymodule/main.bicep) or MultiModuleFolder for multiple modules in a single folder (./mymodule.bicep)",
                            "type": "string",
                            "enum": [
                                "SingleModuleFolder"
                            ]
                        },
                        "filter": {
                            "description": "only deploy modules that match this filter. this is wildcard. if you have defined SingleModuleFolder type, this is used to define what that single module should be named.",
                            "default": "*",
                            "type": "string"
                        },
                        "exclude": {
                            "description": "exclude modules that match this filter. this is wildcard. default is empty",
                            "default": "",
                            "type": "string"
                        }
                    },
                    "required": [
                        "type",
                        "filter"
                    ],
                    "oneOf": [
                        {
                            "properties": {
                                "type": {
                                    "enum": [
                                        "SingleModuleFolder"
                                    ]
                                },
                                "filter": {
                                    "default": "main.bicep",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "filter"
                            ]
                        }
                    ]
                }
            },
            "required": [
                "folder",
                "organisationStyle"
            ]
        },
        "publish": {
            "type": "object",
            "properties": {
                "releaseTrigger": {
                    "description": "what should trigger a publish",
                    "type": "object",
                    "properties": {
                        "static": {
                            "type": "object",
                            "properties": {
                                "update": {
                                    "$ref": "#/definitions/moduleUpdateTriggers"
                                }
                            },
                            "default":{
                                "update":[
                                    "moduleModified"
                                ]
                            }
                        },
                        "semantic": {
                            "type": "object",
                            "properties": {
                                "major": {
                                    "$ref": "#/definitions/moduleUpdateTriggers",
                                    "default": [
                                        "paramCaseModified",
                                        "paramAddedWithoutDefaultValue",
                                        "paramRemoved",
                                        "paramTypeModified",
                                        "paramAllowedValueModified",
                                        "paramDefaultValueModified"
                                    ]
                                },
                                "minor": {
                                    "$ref": "#/definitions/moduleUpdateTriggers",
                                    "default": [
                                        "resourceAdded",
                                        "resourceApiVersionModified",
                                        "resourcePropertiesAdded",
                                        "resourcePropertiesRemoved",
                                        "resourcePropertiesModified"
                                    ]
                                },
                                "patch": {
                                    "$ref": "#/definitions/moduleUpdateTriggers",
                                    "default": [
                                        "moduleModified"
                                    ]
                                }
                            },
                            "default":{
                                "major":[
                                    "paramCaseModified",
                                    "paramAddedWithoutDefaultValue",
                                    "paramRemoved",
                                    "paramTypeModified",
                                    "paramAllowedValueModified",
                                    "paramDefaultValueModified"
                                ],
                                "minor":[
                                    "resourceAdded",
                                    "resourceApiVersionModified",
                                    "resourcePropertiesAdded",
                                    "resourcePropertiesRemoved",
                                    "resourcePropertiesModified"
                                ],
                                "patch":[
                                    "moduleModified"
                                ]
                            }
                        }
                    },
                    "minProperties": 1
                },
                "defaultRelease": {
                    "type": "string",
                    "default": "dev"
                },
                "releases": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "examples": [
                                    "prod",
                                    "dev"
                                ]
                            },
                            "trigger": {
                                "type": "string",
                                "enum": [
                                    "static",
                                    "semantic"
                                ]
                            },
                            "value": {
                                "description": "will be used as the value when released. ignored for semantic version",
                                "type": "string"
                            },
                            "prefix": {
                                "description": "will be used as the prefix when released. version '1.2.3' would be 'v1.2.3' if prefix is 'v'",
                                "type": "string",
                                "examples": [
                                    "v"
                                ]
                            }
                        }
                    },
                    "minItems": 1,
                    "default":[
                        {
                            "name": "dev",
                            "trigger": "static",
                            "value": "beta-latest"
                        },
                        {
                            "name": "dev",
                            "trigger": "semantic",
                            "prefix": "beta-"
                        }
                    ]
                }
            },
            "examples": [
                {
                    "releaseTrigger":{
                        "static":{
                            "update":[
                                "moduleModified"
                            ]
                        },
                        "semantic":{
                            "major":[
                                "paramAddedWithoutDefaultValue"
                            ],
                            "minor":[
                                "resourceAdded"
                            ],
                            "patch":[
                                "moduleModified"
                            ]
                        }
                    },
                    "defaultRelease": "dev",
                    "releases": [
                        {
                            "name": "dev",
                            "trigger": "static",
                            "value": "beta"
                        }
                    ]

                }
            ],
            "required": [
                "releaseTrigger",
                "defaultRelease",
                "releases"
            ]
        }
    },
    "required": [
        "bicepVersion",
        "registry",
        "module",
        "publish"
    ],
    "definitions": {
        "moduleUpdateTriggers": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "paramCaseModified",
                    "paramAddedWithoutDefaultValue",
                    "paramRemoved",
                    "paramTypeModified",
                    "paramAllowedValueModified",
                    "paramDefaultValueModified",
                    "resourceAdded",
                    "resourceRemoved",
                    "resourceApiVersionModified",
                    "resourcePropertiesAdded",
                    "resourcePropertiesRemoved",
                    "resourcePropertiesModified",
                    "outputsAdded",
                    "outputsRemoved",
                    "outputsModified",
                    "moduleModified"
                ]
            }
        }
    }
}